#!/usr/bin/env bash

# usage ./test_caller.sh <stdout-file> <command>
# will return zero if the stdout generated by executing <command> is strictly equal
# to the content of <stdout-file>

# Example: ./test.sh expected_stdout.txt ../../../cmake-build-release/vm/micromachine md5sum

set -e

actual_stdout_file="$(mktemp)"
expected_stdout_file="$1"
command_to_run="${@:2}"

echo "running test: $command_to_run"
${command_to_run} &
vm_pid=$!

sleep 0.1
echo -e "Welcome micromachinist!" | nc -U "/tmp/micromachine/${vm_pid}/usart0" > ${actual_stdout_file} &
sleep 0.1

echo "kill ${vm_pid}"
kill ${vm_pid}


if cmp --silent ${expected_stdout_file} ${actual_stdout_file}; then
    exit 0
else
    echo "Test failed:"
    echo "Expected stdout file: ${expected_stdout_file}"
    echo "--BEGIN-FILE-CONTENT--"
    cat ${expected_stdout_file}
    echo "--END-FILE-CONTENT--"
    echo "Actual stdout file: ${actual_stdout_file}"
    echo "--BEGIN-FILE-CONTENT--"
    cat ${actual_stdout_file}
    echo "--END-FILE-CONTENT--"
    echo "diff:"
    diff ${expected_stdout_file} ${actual_stdout_file}
fi

exit -1

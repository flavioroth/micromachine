
include_directories(framework)

set(HEADER_FILES
    framework/pinkySimBaseTest.h
    framework/pinksim.hpp
    framework/pinkysim_glue.hpp
    framework/SimpleMemory_glue.hpp
)

set(ALL_TESTS_SRC ${HEADER_FILES})

macro(declare_pinksim_test test_name)
    # name of the source test file
    set(TEST_SRC_FILE "${test_name}Test.cpp")

    # build a standalone test executable for this test only
    list(APPEND STANDALONE_TEST_SRCS ${HEADER_FILES})
    list(APPEND STANDALONE_TEST_SRCS ${TEST_SRC_FILE})
    declare_test(${test_name} "${STANDALONE_TEST_SRCS}")
    add_test(${test_name} ${test_name})
    target_include_directories(${test_name} PUBLIC ${EXTERNAL_INSTALL_LOCATION}/include)
    # append the est src file to the global test executable
    list(APPEND ALL_TESTS_SRC "${TEST_SRC_FILE}")

    # clear tmp list
    unset(STANDALONE_TEST_SRCS)
endmacro()

declare_pinksim_test(adcRegisterInstr)
declare_pinksim_test(addImmediateInstr)
declare_pinksim_test(addRegisterInstr)
declare_pinksim_test(addSPInstr)
declare_pinksim_test(adrInstr)
declare_pinksim_test(andRegisterInstr)
declare_pinksim_test(asrImmediateInstr)
declare_pinksim_test(asrRegisterInstr)
declare_pinksim_test(bicRegisterInstr)
declare_pinksim_test(blInstr)
declare_pinksim_test(blxInstr)
declare_pinksim_test(branchInstr)
declare_pinksim_test(bxInstr)
declare_pinksim_test(cmnRegisterInstr)
declare_pinksim_test(cmpImmediateInstr)
declare_pinksim_test(cmpRegisterInstr)
declare_pinksim_test(eorRegisterInstr)
declare_pinksim_test(ldmInstr)
declare_pinksim_test(ldrbImmediateInstr)
declare_pinksim_test(ldrbRegisterInstr)
declare_pinksim_test(ldrhImmediateInstr)
declare_pinksim_test(ldrhRegisterInstr)
declare_pinksim_test(ldrImmediateInstr)
declare_pinksim_test(ldrLiteralInstr)
declare_pinksim_test(ldrRegisterInstr)
declare_pinksim_test(ldrsbRegisterInstr)
declare_pinksim_test(ldrshRegisterInstr)
declare_pinksim_test(lslImmediateInstr)
declare_pinksim_test(lslRegisterInstr)
declare_pinksim_test(lsrImmediateInstr)
declare_pinksim_test(lsrRegisterInstr)
declare_pinksim_test(movImmediateInstr)
declare_pinksim_test(movRegisterInstr)
declare_pinksim_test(mulInstr)
declare_pinksim_test(mvnRegisterInstr)
declare_pinksim_test(nopInstr)
declare_pinksim_test(orrRegisterInstr)
declare_pinksim_test(popInstr)
declare_pinksim_test(pushInstr)
declare_pinksim_test(rev16Instr)
declare_pinksim_test(revInstr)
declare_pinksim_test(revshInstr)
declare_pinksim_test(rorRegisterInstr)
declare_pinksim_test(rsbImmediateInstr)
declare_pinksim_test(sbcRegisterInstr)
declare_pinksim_test(stmInstr)
declare_pinksim_test(strbImmediateInstr)
declare_pinksim_test(strbRegisterInstr)
declare_pinksim_test(strhImmediateInstr)
declare_pinksim_test(strhRegisterInstr)
declare_pinksim_test(strImmediateInstr)
declare_pinksim_test(strRegisterInstr)
declare_pinksim_test(subImmediateInstr)
declare_pinksim_test(subRegisterInstr)
declare_pinksim_test(subSPInstr)
declare_pinksim_test(svcInstr)
declare_pinksim_test(sxtbInstr)
declare_pinksim_test(sxthInstr)
declare_pinksim_test(tstRegisterInstr)
declare_pinksim_test(undInstr)
declare_pinksim_test(uxtbInstr)
declare_pinksim_test(uxthInstr)

# these tests have yet to be integrated
#declare_pinksim_test(mrsInstr)
#declare_pinksim_test(msrInstr)
#declare_pinksim_test(isbInstr)
#declare_pinksim_test(dmbInstr)
#declare_pinksim_test(dsbInstr)
#declare_pinksim_test(bkptInstr)
#declare_pinksim_test(cpsInstr)
#declare_pinksim_test(sevInstr)
#declare_pinksim_test(wfeInstr)
#declare_pinksim_test(wfiInstr)
#declare_pinksim_test(yieldInstr)


declare_test(all_pinky_instructions "${ALL_TESTS_SRC}")
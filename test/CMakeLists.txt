
include(gtest)

find_package(Threads)

set(ALL_TEST_OBJS "")

set(CPU_TESTS_COMMON_FILES
		framework/CpuTestHarness.hpp
		framework/CpuTestHarness.cpp
)

macro(declare_test test_name test_files)
	add_executable(test_of_${test_name} ${test_files})
	target_include_directories(test_of_${test_name} PUBLIC "${CMAKE_SOURCE_DIR}/lib")
	target_include_directories(test_of_${test_name} PUBLIC ${EXTERNAL_INSTALL_LOCATION}/include)
	target_include_directories(test_of_${test_name} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/framework)
	target_link_libraries(test_of_${test_name} libgtest_main libgtest ${CMAKE_THREAD_LIBS_INIT} micromachine)
	# append the test src file to the global test executable
	list(APPEND ALL_TESTS_SRC ${test_files})
endmacro()

set(ALL_TESTS_SRC ${CPU_TESTS_COMMON_FILES})

macro(declare_pinksim_test test_src_file)
	# name of the source test file
	STRING(REGEX REPLACE "[\\./]" "_" test_name ${test_src_file})
	add_executable(test_of_${test_name} ${test_src_file} ${CPU_TESTS_COMMON_FILES})
	target_include_directories(test_of_${test_name} PUBLIC "${CMAKE_SOURCE_DIR}/lib")
	target_include_directories(test_of_${test_name} PUBLIC ${EXTERNAL_INSTALL_LOCATION}/include)
	target_include_directories(test_of_${test_name} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/framework)
	target_link_libraries(test_of_${test_name} libgtest_main libgtest ${CMAKE_THREAD_LIBS_INIT} micromachine)
	# append the test src file to the global test executable
	list(APPEND ALL_TESTS_SRC "${test_src_file}")
endmacro()

declare_pinksim_test(instructions/adcRegisterInstrTest.cpp)
declare_pinksim_test(instructions/addImmediateInstrTest.cpp)
declare_pinksim_test(instructions/addRegisterInstrTest.cpp)
declare_pinksim_test(instructions/addSPInstrTest.cpp)
declare_pinksim_test(instructions/adrInstrTest.cpp)
declare_pinksim_test(instructions/andRegisterInstrTest.cpp)
declare_pinksim_test(instructions/asrImmediateInstrTest.cpp)
declare_pinksim_test(instructions/asrRegisterInstrTest.cpp)
declare_pinksim_test(instructions/bicRegisterInstrTest.cpp)
declare_pinksim_test(instructions/blInstrTest.cpp)
declare_pinksim_test(instructions/blxInstrTest.cpp)
declare_pinksim_test(instructions/branchInstrTest.cpp)
declare_pinksim_test(instructions/bxInstrTest.cpp)
declare_pinksim_test(instructions/cmnRegisterInstrTest.cpp)
declare_pinksim_test(instructions/cmpImmediateInstrTest.cpp)
declare_pinksim_test(instructions/cmpRegisterInstrTest.cpp)
declare_pinksim_test(instructions/eorRegisterInstrTest.cpp)
declare_pinksim_test(instructions/ldmInstrTest.cpp)
declare_pinksim_test(instructions/ldrbImmediateInstrTest.cpp)
declare_pinksim_test(instructions/ldrbRegisterInstrTest.cpp)
declare_pinksim_test(instructions/ldrhImmediateInstrTest.cpp)
declare_pinksim_test(instructions/ldrhRegisterInstrTest.cpp)
declare_pinksim_test(instructions/ldrImmediateInstrTest.cpp)
declare_pinksim_test(instructions/ldrLiteralInstrTest.cpp)
declare_pinksim_test(instructions/ldrRegisterInstrTest.cpp)
declare_pinksim_test(instructions/ldrsbRegisterInstrTest.cpp)
declare_pinksim_test(instructions/ldrshRegisterInstrTest.cpp)
declare_pinksim_test(instructions/lslImmediateInstrTest.cpp)
declare_pinksim_test(instructions/lslRegisterInstrTest.cpp)
declare_pinksim_test(instructions/lsrImmediateInstrTest.cpp)
declare_pinksim_test(instructions/lsrRegisterInstrTest.cpp)
declare_pinksim_test(instructions/movImmediateInstrTest.cpp)
declare_pinksim_test(instructions/movRegisterInstrTest.cpp)
declare_pinksim_test(instructions/mulInstrTest.cpp)
declare_pinksim_test(instructions/mvnRegisterInstrTest.cpp)
declare_pinksim_test(instructions/nopInstrTest.cpp)
declare_pinksim_test(instructions/orrRegisterInstrTest.cpp)
declare_pinksim_test(instructions/popInstrTest.cpp)
declare_pinksim_test(instructions/pushInstrTest.cpp)
declare_pinksim_test(instructions/rev16InstrTest.cpp)
declare_pinksim_test(instructions/revInstrTest.cpp)
declare_pinksim_test(instructions/revshInstrTest.cpp)
declare_pinksim_test(instructions/rorRegisterInstrTest.cpp)
declare_pinksim_test(instructions/rsbImmediateInstrTest.cpp)
declare_pinksim_test(instructions/sbcRegisterInstrTest.cpp)
declare_pinksim_test(instructions/stmInstrTest.cpp)
declare_pinksim_test(instructions/strbImmediateInstrTest.cpp)
declare_pinksim_test(instructions/strbRegisterInstrTest.cpp)
declare_pinksim_test(instructions/strhImmediateInstrTest.cpp)
declare_pinksim_test(instructions/strhRegisterInstrTest.cpp)
declare_pinksim_test(instructions/strImmediateInstrTest.cpp)
declare_pinksim_test(instructions/strRegisterInstrTest.cpp)
declare_pinksim_test(instructions/subImmediateInstrTest.cpp)
declare_pinksim_test(instructions/subRegisterInstrTest.cpp)
declare_pinksim_test(instructions/subSPInstrTest.cpp)
declare_pinksim_test(instructions/svcInstrTest.cpp)
declare_pinksim_test(instructions/sxtbInstrTest.cpp)
declare_pinksim_test(instructions/sxthInstrTest.cpp)
declare_pinksim_test(instructions/tstRegisterInstrTest.cpp)
declare_pinksim_test(instructions/undInstrTest.cpp)
declare_pinksim_test(instructions/uxtbInstrTest.cpp)
declare_pinksim_test(instructions/uxthInstrTest.cpp)
# these tests have yet to be integrated
declare_pinksim_test(instructions/mrsInstrTest.cpp)
declare_pinksim_test(instructions/msrInstrTest.cpp)
#declare_pinksim_test(instructions/isbInstrTest.cpp)
#declare_pinksim_test(instructions/dmbInstrTest.cpp)
#declare_pinksim_test(instructions/dsbInstrTest.cpp)
#declare_pinksim_test(instructions/bkptInstrTest.cpp)
declare_pinksim_test(instructions/cpsInstrTest.cpp)
#declare_pinksim_test(instructions/sevInstrTest.cpp)
#declare_pinksim_test(instructions/wfeInstrTest.cpp)
#declare_pinksim_test(instructions/wfiInstrTest.cpp)
#declare_pinksim_test(instructions/yieldInstrTest.cpp)

declare_test(binary_helpers_tests binary_helpers_tests.cpp)
#declare_test(alu_tests alu_tests.cpp)
declare_test(exception_prioritization exception_prioritization.cpp)
declare_test(systick systick.cpp)
declare_test(nvic nvic.cpp)

add_executable(all_tests "${ALL_TESTS_SRC}")
target_include_directories(all_tests PUBLIC "${CMAKE_SOURCE_DIR}/lib")
target_include_directories(all_tests PUBLIC ${EXTERNAL_INSTALL_LOCATION}/include)
target_include_directories(all_tests PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/framework)
target_link_libraries(all_tests libgtest_main libgtest ${CMAKE_THREAD_LIBS_INIT} micromachine)
add_test(all_tests all_tests)

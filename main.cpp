

#include "lib/cpu.hpp"

int main() {

	unsigned char test_bin[] = {
	  0x80, 0xb5, 0x82, 0xb0, 0x00, 0xaf, 0x02, 0x20, 0x04, 0x21, 0x00, 0xf0,
	  0x05, 0xf8, 0x03, 0x1c, 0x7b, 0x60, 0xbd, 0x46, 0x02, 0xb0, 0x80, 0xbd,
	  0x80, 0xb5, 0x82, 0xb0, 0x00, 0xaf, 0x78, 0x60, 0x39, 0x60, 0x7a, 0x68,
	  0x3b, 0x68, 0xd3, 0x18, 0x18, 0x1c, 0xbd, 0x46, 0x02, 0xb0, 0x80, 0xbd
	};




	cpu c;

	c.mem().map(test_bin, 0, sizeof(test_bin));

	c.reset();

	size_t faults = 0;
	for(int i = 0; i < 20000; i++) {
		faults += c.step();
		if(faults >= 2) {
			fprintf(stderr, "Too many faults. Aborting\n");
			break;
		}
	}

	c.regs().print();

	return 0;
}